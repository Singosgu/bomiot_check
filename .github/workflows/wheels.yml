name: Build universal abi3 wheels for Python 3.9+ on Windows, macOS, Linux

on:
  push:
    branches: [main, master]
  pull_request:

jobs:
  build_abi3_wheels:
    name: Build abi3 wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      # 1. 检出仓库代码
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install vcpkg & OpenSSL
        if: runner.os == 'windows'
        run: |
          git clone https://github.com/Microsoft/vcpkg C:\vcpkg
          C:\vcpkg\bootstrap-vcpkg.bat
          C:\vcpkg\vcpkg.exe install openssl:x64-windows
      
      - name: Set env vars
        if: runner.os == 'windows'
        run: |
          echo "VCPKG_ROOT=C:\vcpkg" >> $env:GITHUB_ENV
          echo "OPENSSL_DIR=C:\vcpkg\installed\x64-windows" >> $env:GITHUB_ENV
          echo "OPENSSL_NO_VENDOR=1" >> $env:GITHUB_ENV
      
      # 2. 安装 Rust 工具链
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      # 3. 安装 Python 3.9（abi3 轮子最低要求）
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      # 4. 升级 pip 并安装 cibuildwheel
      - name: Upgrade pip and install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel

      # 5. （仅 Linux）安装 patchelf 以确保 manylinux 兼容性
      - name: Install OpenSSL build dependencies
        if: runner.os == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev
          ls -l /usr/lib/x86_64-linux-gnu/pkgconfig/openssl.pc
          
      - name: Build wheels with PKG_CONFIG_PATH
        env:
          CIBW_ENVIRONMENT: PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig
        run: |
          pip install cibuildwheel
          cibuildwheel --output-dir wheelhouse

      # 6. 使用 cibuildwheel 构建 abi3 wheel
      - name: Build abi3 wheel with cibuildwheel
        run: cibuildwheel --output-dir dist
        env:
          # 只构建 cp39-*，因 abi3 只需一次，wheel 可供 3.9+ 使用
          CIBW_BUILD: "cp39-*"
          # 跳过 PyPy 和 musllinux（如需 musllinux, 可移除此项）
          CIBW_SKIP: "pp* *-musllinux*"
          # Linux 架构（可根据需求扩展，如 aarch64）
          CIBW_ARCHS_LINUX: "auto"
          # 避免 cibuildwheel 检查所有 Python 版本，这里只需 Python 3.9
          CIBW_ENVIRONMENT: "PYO3_STATIC_LIB=1"
          CIBW_MANYLINUX_IMAGE: "manylinux_2_28"

      # 7. 上传 wheel 产物
      - name: Upload built wheels
        uses: actions/upload-artifact@v4
        with:
          name: abi3-wheels-${{ runner.os }}
          path: dist/*.whl

      # 8. 可选：构建并上传 sdist
      - name: Build sdist
        run: |
          pip install build
          python -m build --sdist --outdir dist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist-${{ runner.os }}
          path: dist/*.tar.gz